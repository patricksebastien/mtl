#N canvas 1 82 1272 661 10;
#X obj 109 531 outlet~;
#X obj 219 532 outlet~;
#X obj 109 465 tof/crossfade~ 2;
#X obj 1019 221 inlet params;
#X obj 1019 267 print PARAM_NOTFOUND;
#X obj 672 283 tof/param /wet 0 /g slider 0 1;
#X obj 672 328 line~;
#X msg 672 307 \$1 5;
#X obj 1019 243 tof/param route;
#X obj 1021 293 b;
#X obj 1021 316 tof/param gui;
#X obj 110 295 inlet~;
#X obj 156 295 inlet~;
#X obj 294 278 tof/param /pitch 0 /g slider -60 60;
#N canvas 0 50 1272 714 robot 0;
#X obj 311 527 samphold~;
#X obj 344 494 phasor~;
#N canvas 0 50 911 415 rjdj_e_vocoder 0;
#N canvas 147 50 795 617 fft-analysis 0;
#X obj 94 511 *~;
#X obj 55 511 *~;
#X obj 413 356 *~;
#X obj 372 356 *~;
#X obj 372 379 +~;
#X obj 54 183 *~;
#X obj 54 158 inlet~;
#X obj 54 206 rfft~;
#X obj 54 560 *~;
#X obj 141 245 *~;
#X obj 372 333 rfft~;
#X obj 54 535 rifft~;
#X obj 54 583 outlet~;
#X obj 107 245 *~;
#X obj 107 268 +~;
#X text 458 408 modulus;
#X obj 107 420 *~;
#X obj 600 13 block~ 1024 4;
#X obj 107 398 clip~;
#X obj 107 294 +~ 1e-20;
#X obj 108 480 *~ 0.00065;
#X obj 373 307 *~;
#X obj 373 282 inlet~;
#X obj 107 321 q8_rsqrt~;
#X obj 372 402 q8_sqrt~;
#X text 458 425 of control;
#X text 456 442 amplitude;
#X text 196 248 reciprocal;
#X text 199 267 modulus of;
#X text 195 287 filter input;
#X text 196 306 amplitude;
#X text 115 159 filter input;
#X text 438 282 control source;
#X text 434 332 Fourier transform;
#X text 28 17 Internal workings of the timbre stamping algorithm. First
the "filter input" is treated as in the compressor patch \, multiplying
each channel amplitude by one over its modulus (but limited by the
"squelch" parameter.) It is then multiplied by the modulus of the channel
amplitude for the control source (which is Fourier analyzed in parallel
with the filter input.);
#X text 145 422 multiply the two amplitude;
#X text 143 439 factors (for compression;
#X text 145 455 and to apply new timbre);
#X obj 170 388 *;
#X obj 170 366 t a a;
#X obj 170 409 * 0.01;
#X obj 87 184 tabreceive~ \$0-hann-g;
#X obj 148 346 r \$0-squelch-g;
#X obj 406 308 tabreceive~ \$0-hann-g;
#X obj 87 560 tabreceive~ \$0-hann-g;
#X connect 0 0 11 1;
#X connect 1 0 11 0;
#X connect 2 0 4 1;
#X connect 3 0 4 0;
#X connect 4 0 24 0;
#X connect 5 0 7 0;
#X connect 6 0 5 0;
#X connect 7 0 13 0;
#X connect 7 0 13 1;
#X connect 7 0 1 0;
#X connect 7 1 9 0;
#X connect 7 1 9 1;
#X connect 7 1 0 0;
#X connect 8 0 12 0;
#X connect 9 0 14 1;
#X connect 10 0 3 0;
#X connect 10 0 3 1;
#X connect 10 1 2 0;
#X connect 10 1 2 1;
#X connect 11 0 8 0;
#X connect 13 0 14 0;
#X connect 14 0 19 0;
#X connect 16 0 20 0;
#X connect 18 0 16 0;
#X connect 19 0 23 0;
#X connect 20 0 0 1;
#X connect 20 0 1 1;
#X connect 21 0 10 0;
#X connect 22 0 21 0;
#X connect 23 0 18 0;
#X connect 24 0 16 1;
#X connect 38 0 40 0;
#X connect 39 0 38 0;
#X connect 39 1 38 1;
#X connect 40 0 18 2;
#X connect 41 0 5 1;
#X connect 42 0 39 0;
#X connect 43 0 21 1;
#X connect 44 0 8 1;
#X restore 110 211 pd fft-analysis;
#N canvas 0 110 565 454 hann-window 0;
#X obj 378 165 osc~;
#X obj 378 190 *~ -0.5;
#X obj 378 214 +~ 0.5;
#X obj 38 173 /;
#X obj 127 142 samplerate~;
#X obj 177 204 swap;
#X obj 177 228 /;
#X obj 49 201 * 1000;
#X obj 38 115 t f b f;
#X msg 173 92 resize \$1;
#X obj 173 116 s \$0-hann;
#X msg 382 130 0;
#X obj 330 131 t f b;
#X text 15 8 calculate Hann window table (variable window size) and
constants window-hz (fundamental frequency of analysis) \, window-sec
and window-msec (analysis window size in seconds and msec).;
#X obj 38 88 r \$0-window-size-g;
#X obj 49 228 s \$0-window-msec-g;
#X obj 38 251 s \$0-window-sec-g;
#X obj 177 252 s \$0-window-hz-g;
#X obj 331 247 tabwrite~ \$0-hann-g;
#X obj 331 275 table \$0-hann-g 1024;
#X obj 330 105 r \$0-window-hz-g;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 18 0;
#X connect 3 0 7 0;
#X connect 3 0 16 0;
#X connect 4 0 3 1;
#X connect 4 0 5 1;
#X connect 5 0 6 0;
#X connect 5 1 6 1;
#X connect 6 0 17 0;
#X connect 7 0 15 0;
#X connect 8 0 3 0;
#X connect 8 0 5 0;
#X connect 8 1 4 0;
#X connect 8 2 9 0;
#X connect 9 0 10 0;
#X connect 11 0 0 1;
#X connect 12 0 0 0;
#X connect 12 1 11 0;
#X connect 12 1 18 0;
#X connect 14 0 8 0;
#X connect 20 0 12 0;
#X restore 243 212 pd hann-window;
#X obj 545 257 loadbang;
#X obj 545 279 f \$0;
#X obj 111 186 inlet~;
#X obj 212 186 inlet~;
#X obj 109 238 outlet~;
#X text 114 75 Pd vocoder/timbre stamp;
#X obj 423 103 inlet;
#X obj 423 125 s \$0-squelch;
#X msg 545 300 \; \$1-window-size-g 1024 \; \$1-squelch-g 30 \;;
#X connect 0 0 6 0;
#X connect 2 0 3 0;
#X connect 3 0 10 0;
#X connect 4 0 0 0;
#X connect 5 0 0 1;
#X connect 8 0 9 0;
#X restore 345 321 pd rjdj_e_vocoder;
#X obj 470 292 moses 1;
#X obj 471 264 sigmund~ -hop 512 pitch;
#X obj 510 356 line~;
#X msg 510 332 \$1 25;
#X obj 420 99 inlet~;
#X obj 344 292 phasor~;
#X obj 530 386 *~;
#X obj 233 370 +~;
#X obj 344 269 mtof~;
#X obj 313 559 outlet~;
#X obj 228 332 sig~;
#X obj 243 288 i;
#X obj 507 96 inlet pitch;
#X obj 691 90 inlet samplerate;
#X obj 843 81 inlet tracking;
#X connect 0 0 12 0;
#X connect 1 0 0 1;
#X connect 2 0 0 0;
#X connect 3 1 6 0;
#X connect 4 0 3 0;
#X connect 5 0 9 0;
#X connect 6 0 5 0;
#X connect 7 0 4 0;
#X connect 7 0 2 1;
#X connect 8 0 2 0;
#X connect 9 0 10 1;
#X connect 10 0 11 0;
#X connect 11 0 8 0;
#X connect 13 0 10 0;
#X connect 14 0 13 0;
#X connect 15 0 14 0;
#X connect 16 0 1 0;
#X connect 17 0 9 1;
#X restore 191 395 pd robot;
#X obj 328 335 tof/param /tracking 0 /g slider 0 2;
#X obj 314 306 tof/param /samplerate 0 /g slider 1000 20000;
#N canvas 0 50 1272 714 robot 0;
#X obj 311 527 samphold~;
#X obj 344 494 phasor~;
#N canvas 0 50 911 415 rjdj_e_vocoder 0;
#N canvas 147 50 795 617 fft-analysis 0;
#X obj 94 511 *~;
#X obj 55 511 *~;
#X obj 413 356 *~;
#X obj 372 356 *~;
#X obj 372 379 +~;
#X obj 54 183 *~;
#X obj 54 158 inlet~;
#X obj 54 206 rfft~;
#X obj 54 560 *~;
#X obj 141 245 *~;
#X obj 372 333 rfft~;
#X obj 54 535 rifft~;
#X obj 54 583 outlet~;
#X obj 107 245 *~;
#X obj 107 268 +~;
#X text 458 408 modulus;
#X obj 107 420 *~;
#X obj 600 13 block~ 1024 4;
#X obj 107 398 clip~;
#X obj 87 184 tabreceive~ \$0-hann;
#X obj 107 294 +~ 1e-20;
#X obj 108 480 *~ 0.00065;
#X obj 87 560 tabreceive~ \$0-hann;
#X obj 373 307 *~;
#X obj 373 282 inlet~;
#X obj 406 308 tabreceive~ \$0-hann;
#X obj 107 321 q8_rsqrt~;
#X obj 372 402 q8_sqrt~;
#X text 458 425 of control;
#X text 456 442 amplitude;
#X text 196 248 reciprocal;
#X text 199 267 modulus of;
#X text 195 287 filter input;
#X text 196 306 amplitude;
#X text 115 159 filter input;
#X text 438 282 control source;
#X text 434 332 Fourier transform;
#X text 28 17 Internal workings of the timbre stamping algorithm. First
the "filter input" is treated as in the compressor patch \, multiplying
each channel amplitude by one over its modulus (but limited by the
"squelch" parameter.) It is then multiplied by the modulus of the channel
amplitude for the control source (which is Fourier analyzed in parallel
with the filter input.);
#X text 145 422 multiply the two amplitude;
#X text 143 439 factors (for compression;
#X text 145 455 and to apply new timbre);
#X obj 148 346 r \$0-squelch;
#X obj 170 388 *;
#X obj 170 366 t a a;
#X obj 170 409 * 0.01;
#X connect 0 0 11 1;
#X connect 1 0 11 0;
#X connect 2 0 4 1;
#X connect 3 0 4 0;
#X connect 4 0 27 0;
#X connect 5 0 7 0;
#X connect 6 0 5 0;
#X connect 7 0 13 0;
#X connect 7 0 13 1;
#X connect 7 0 1 0;
#X connect 7 1 9 0;
#X connect 7 1 9 1;
#X connect 7 1 0 0;
#X connect 8 0 12 0;
#X connect 9 0 14 1;
#X connect 10 0 3 0;
#X connect 10 0 3 1;
#X connect 10 1 2 0;
#X connect 10 1 2 1;
#X connect 11 0 8 0;
#X connect 13 0 14 0;
#X connect 14 0 20 0;
#X connect 16 0 21 0;
#X connect 18 0 16 0;
#X connect 19 0 5 1;
#X connect 20 0 26 0;
#X connect 21 0 0 1;
#X connect 21 0 1 1;
#X connect 22 0 8 1;
#X connect 23 0 10 0;
#X connect 24 0 23 0;
#X connect 25 0 23 1;
#X connect 26 0 18 0;
#X connect 27 0 16 1;
#X connect 41 0 43 0;
#X connect 42 0 44 0;
#X connect 43 0 42 0;
#X connect 43 1 42 1;
#X connect 44 0 18 2;
#X restore 110 211 pd fft-analysis;
#N canvas 0 110 565 454 hann-window 0;
#X obj 378 165 osc~;
#X obj 378 190 *~ -0.5;
#X obj 378 214 +~ 0.5;
#X obj 331 247 tabwrite~ \$0-hann;
#X obj 38 173 /;
#X obj 127 142 samplerate~;
#X obj 177 204 swap;
#X obj 177 228 /;
#X obj 49 201 * 1000;
#X obj 38 115 t f b f;
#X msg 173 92 resize \$1;
#X obj 173 116 s \$0-hann;
#X msg 382 130 0;
#X obj 330 131 t f b;
#X text 15 8 calculate Hann window table (variable window size) and
constants window-hz (fundamental frequency of analysis) \, window-sec
and window-msec (analysis window size in seconds and msec).;
#X obj 330 274 table \$0-hann 1024;
#X obj 49 228 s \$0-window-msec;
#X obj 38 251 s \$0-window-sec;
#X obj 38 88 r \$0-window-size;
#X obj 177 252 s \$0-window-hz;
#X obj 330 105 r \$0-window-hz;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 4 0 8 0;
#X connect 4 0 17 0;
#X connect 5 0 4 1;
#X connect 5 0 6 1;
#X connect 6 0 7 0;
#X connect 6 1 7 1;
#X connect 7 0 19 0;
#X connect 8 0 16 0;
#X connect 9 0 4 0;
#X connect 9 0 6 0;
#X connect 9 1 5 0;
#X connect 9 2 10 0;
#X connect 10 0 11 0;
#X connect 12 0 0 1;
#X connect 13 0 0 0;
#X connect 13 1 3 0;
#X connect 13 1 12 0;
#X connect 18 0 9 0;
#X connect 20 0 13 0;
#X restore 243 212 pd hann-window;
#X obj 545 257 loadbang;
#X obj 545 279 f \$0;
#X msg 545 300 \; pd dsp 1 \; \$1-window-size 1024 \; \$1-squelch 30
\;;
#X obj 111 186 inlet~;
#X obj 212 186 inlet~;
#X obj 109 238 outlet~;
#X text 114 75 Pd vocoder/timbre stamp;
#X obj 423 103 inlet;
#X obj 423 125 s \$0-squelch;
#X connect 0 0 7 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 5 0 0 0;
#X connect 6 0 0 1;
#X connect 9 0 10 0;
#X restore 345 321 pd rjdj_e_vocoder;
#X obj 470 292 moses 1;
#X obj 471 264 sigmund~ -hop 512 pitch;
#X obj 510 356 line~;
#X msg 510 332 \$1 25;
#X obj 420 99 inlet~;
#X obj 344 292 phasor~;
#X obj 530 386 *~;
#X obj 233 370 +~;
#X obj 344 269 mtof~;
#X obj 313 559 outlet~;
#X obj 228 332 sig~;
#X obj 243 288 i;
#X obj 507 96 inlet pitch;
#X obj 691 90 inlet samplerate;
#X obj 843 81 inlet tracking;
#X connect 0 0 12 0;
#X connect 1 0 0 1;
#X connect 2 0 0 0;
#X connect 3 1 6 0;
#X connect 4 0 3 0;
#X connect 5 0 9 0;
#X connect 6 0 5 0;
#X connect 7 0 4 0;
#X connect 7 0 2 1;
#X connect 8 0 2 0;
#X connect 9 0 10 1;
#X connect 10 0 11 0;
#X connect 11 0 8 0;
#X connect 13 0 10 0;
#X connect 14 0 13 0;
#X connect 15 0 14 0;
#X connect 16 0 1 0;
#X connect 17 0 9 1;
#X restore 258 391 pd robot;
#X obj 439 210 tof/argument 6;
#X obj 415 184 tof/argument 5;
#X obj 379 159 tof/argument 4;
#X obj 342 127 tof/argument 3;
#X obj 409 77 loadbang;
#X connect 2 0 0 0;
#X connect 2 1 1 0;
#X connect 3 0 8 0;
#X connect 5 0 7 0;
#X connect 6 0 2 4;
#X connect 7 0 6 0;
#X connect 8 0 4 0;
#X connect 9 0 10 0;
#X connect 11 0 2 0;
#X connect 11 0 14 0;
#X connect 12 0 2 1;
#X connect 12 0 17 0;
#X connect 13 0 14 1;
#X connect 13 0 17 1;
#X connect 14 0 2 2;
#X connect 15 0 14 3;
#X connect 15 0 17 2;
#X connect 16 0 14 2;
#X connect 16 0 17 2;
#X connect 17 0 2 3;
#X connect 18 0 15 0;
#X connect 19 0 16 0;
#X connect 20 0 13 0;
#X connect 21 0 5 0;
#X connect 22 0 18 0;
#X connect 22 0 19 0;
#X connect 22 0 20 0;
#X connect 22 0 21 0;
